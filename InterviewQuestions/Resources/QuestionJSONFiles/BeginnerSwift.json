 [
  
  {
  "category" : "Beginner Swift",
  "question" : "What is the modulo operator and what does it do?",
  "answer" : "The modulo operator (%) allows you to find the remainder in division. It is commonly used to find whether a number evenly divides into another number.",
  "answerCode" : "13 % 5 == 3\n\n// Thirteen divided by five has a 'leftover' of 3."
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What are the two ways to add comments to your code?",
  "answer" : "A single line can be commented out with two / symbols. Multiple lines can be commented out by surrounding the code with /* and */ symbols.",
  "answerCode" : "// one line commented out\n\n/*\nAll of this\nwill be\ncommented out.\n*/"
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What is the difference between a constant and a variable and how do you declare each?",
  "answer" : "Unlike a variable, once you've declared a constant, you are not able to change its data.",
  "answerCode" : "let myConstant = \"my initial value\"\nmyConstant = \"you can't redeclare this\"(ERROR)\n\nvar myVariable = \"my initial value\"\nmyVariable = \"you CAN redeclare this\""
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What is string interpolation?",
  "answer" : "String interpolation allows you to make a string by replacing what is inside of the \\() with the contents inside of the \\()",
  "answerCode" : "let name = \"Joe\"\nlet age = 34\nlet message = \"Hello my name is \\(name) and I am \\(age) years old!\"\n\nprint(message)\nPrints: Hello my name is Joe and I am 34 years old!"
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What is a tuple?",
  "answer" : "A tuple is a type that represents data composed of multiple parts.",
  "answerCode" : "let coordinates: (Int, Int) = (x: 3, y: 5)\nlet xValue = coordinates.x\n\n\n// xValue is equal to 3."
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What are the 6 comparison operators and what does each one return?",
  "answer" : "Each of the comparison operators returns a BOOL:\n\nEqual: ==\nNot Equal: !=\nGreater Than: >\nGreater Than or Equal To: >=\nLess Than: <\nLess Than or Equal To: <="
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What's the problem with the following code?",
  "questionCode" : "let age = 13\n\nif age >= 21 {\n  let canDrink = true\n} else {\n  let canDrink = false\n}\n\nprint(\"Someone who is \\(age) can drink alcohol: \\(canDrink))",
  "answer" : "Scope. The scope of the constant canDrink expires after the } symbol and therefore can't be used in the print statement."
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What is the purpose of optionals in Swift?",
  "answer" : "Optionals solve the problem in other computer languages of sentinal values. Imagine a program that asks for but does not require a user's age. If a user does not input an age, in other computer languages, it might default to a number, such as zero. But this would be the same age of a newborn. Optionals allow your program to be explict about whether a certain value is known or not."
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What is nil coalescing?",
  "answer" : "Nil coalescing (??) allows you to check if an optional value exists and, if not, choose another (often default) value.",
  "answerCode" : "var optionalNumber: Int? = nil\nlet unwrappedNumber = optionalNumber ?? 0\n\n/*Unwrapped number will be equal to optionalNumber if optionalNumber is non-nil. Otherwise, it will be equal to zero. In this case, optionalNumber equals 0.*/"
  },

  {
  "category" : "Beginner Swift",
  "question" : "In each of the following statements, what would the value be?",
  "questionCode" : "1) let value = true && false\n\n2) let value = false || 3 > 1\n\n3) let value = ((10 % 2) == 0) && (false == 3 < 1)",
  "answer" : "1) FALSE\n\n2) TRUE\n\n3) TRUE"
  },

  
  {
  "category" : "Beginner Swift",
  "question" : "What is an example of a closed range? A half-open range?",
  "answer" : "A closed range includes both the start and end value. A half-open range includes the start value and up to, but not including, the end value.",
  "answerCode" : "let rangeA = 1...10\nlet rangeB = 11..<20\n\n// rangeA contains 10 numbers\n// rangeB contains 9 numbers"
  },
  
  
  {
  "category" : "Beginner Swift",
  "question" : "What is a wildcard symbol used for?",
  "answer" : "A wildcard or _ is used to signify that the variable or constant that it is replacing is not needed. It is commonly used to skip the external parameter name in a function.",
  "answerCode" : "for _ in 1...5 {\n   print('test')\n}\n// prints 'test' five times\n\nfunc noExtPar(_ num: Int) {\n}\nnoExtPar(3)"
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "How would you declare a function that has a parameter of an array of strings and returns an integer?",
  "answer" : "",
  "answerCode" : "func myFunc(array: [String]) -> Int {\n  // do something\n  // return an integer\n}"
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "Where is a function’s return type declared?",
  "answer" : "After the -> symbol. If a -> symbol is not used, then the function returns Void.",
  "answerCode" : "func sayHi() {\n   print('Hi')\n}\n\nfunc sayHi() -> Void {\n   print('Hi')\n}"
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What is the type of the constant ‘myNum’?",
  "questionCode" : "let myNum = Int(\"1\")",
  "answer" : "myNum is an optional Int. It is optional because Int has an initializer that takes in a string, but because the string could contain non-digits characters, it is possible that the initializer will fail."
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What’s the problem with this code?",
  "questionCode" : "let num = [1, 2, 3, 4, 5]\n\nlet lastNum = num[5]",
  "answer" : "Since arrays are zero-indexed, the first number in the array is at index zero and the last number in the array is at index (count - 1). Therefore the code goes beyond the last index and will crash."
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What is the type of firstNum?",
  "questionCode" : "let num = [1, 2, 3, 4, 5]\n\nlet firstNum = num.first",
  "answer" : "Optional Int or Optional(1). The property first returns the first element in an array, but since arrays can be empty, it is wrapped in an optional."
  },
  
  {
  "category" : "Beginner Swift",
  "question" : "What is the purpose of a switch statement?",
  "answer" : "A switch statement is often a “cleaner” way to analyze multiple if/else if statements.",
  "answerCode" : "let num = 10\n\nswitch num {\ncase 0:\n   print('zero')\ncase 1...5:\n   print('one through five')\ndefault:\n   print('negative or larger than five')\n}\n\n// would print “negative or larger than five”"
  }
  
  ]


